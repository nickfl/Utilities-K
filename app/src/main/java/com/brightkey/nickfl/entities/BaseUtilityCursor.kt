package com.brightkey.nickfl.entities


import io.objectbox.BoxStore
import io.objectbox.Cursor
import io.objectbox.Transaction
import io.objectbox.annotation.apihint.Internal
import io.objectbox.internal.CursorFactory

// THIS CODE IS GENERATED BY ObjectBox, DO NOT EDIT.

/**
 * ObjectBox generated Cursor implementation for "BaseUtility".
 * Note that this is a low-level class: usually you should stick to the Box class.
 */
class BaseUtilityCursor(tx: Transaction, cursor: Long, boxStore: BoxStore) : Cursor<BaseUtility>(tx, cursor, BaseUtility_.__INSTANCE, boxStore) {
    @Internal
    internal class Factory : CursorFactory<BaseUtility> {
        override fun createCursor(tx: Transaction, cursorHandle: Long, boxStoreForEntities: BoxStore?): Cursor<BaseUtility> {
            return BaseUtilityCursor(tx, cursorHandle, boxStoreForEntities!!)
        }
    }

    public override fun getId(entity: BaseUtility): Long {
        return ID_GETTER.getId(entity)
    }

    /**
     * Puts an object into its box.
     *
     * @return The ID of the object within its box.
     */
    override fun put(entity: BaseUtility): Long {
        val utilityType = entity.utilityType
        val __id1 = if (utilityType != null) __ID_utilityType else 0
        val billDate = entity.billDate
        val __id2 = if (billDate != null) __ID_billDate else 0
        val dueDate = entity.dueDate
        val __id3 = if (dueDate != null) __ID_dueDate else 0
        val datePaid = entity.datePaid
        val __id4 = if (datePaid != null) __ID_datePaid else 0

        Cursor.collect313311(cursor, 0, Cursor.PUT_FLAG_FIRST,
                __id1, utilityType, 0, null,
                0, null, 0, null,
                __id2, if (__id2 != 0) billDate!!.time else 0, __id3, if (__id3 != 0) dueDate!!.time else 0,
                __id4, if (__id4 != 0) datePaid!!.time else 0, 0, 0,
                0, 0, 0, 0,
                0, 0f, __ID_amountDue, entity.amountDue)

        val __assignedId = Cursor.collect002033(cursor, entity.id, Cursor.PUT_FLAG_COMPLETE,
                0, 0, 0, 0,
                0, 0f, 0, 0f,
                0, 0f, __ID_amountType0, entity.amountType0,
                __ID_amountType1, entity.amountType1, __ID_amountType2, entity.amountType2)

        entity.id = __assignedId

        return __assignedId
    }

    companion object {

        private val ID_GETTER = BaseUtility_.__ID_GETTER


        private val __ID_utilityType = BaseUtility_.utilityType.id
        private val __ID_billDate = BaseUtility_.billDate.id
        private val __ID_dueDate = BaseUtility_.dueDate.id
        private val __ID_datePaid = BaseUtility_.datePaid.id
        private val __ID_amountDue = BaseUtility_.amountDue.id
        private val __ID_amountType0 = BaseUtility_.amountType0.id
        private val __ID_amountType1 = BaseUtility_.amountType1.id
        private val __ID_amountType2 = BaseUtility_.amountType2.id
    }

}
